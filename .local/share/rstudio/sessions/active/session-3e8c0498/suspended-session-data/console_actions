{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1
    ],
    "data": [
        "  year_results <- pca_results[[as.character(year)]]$top_species",
        "+ ",
        "  ",
        "+ ",
        "  # Print dominant species results (>1% relative abundance)",
        "+ ",
        "  cat(\"\\nDominant Species (>1% relative abundance):\\n\")",
        "+ ",
        "  dominant_results <- year_results %>%",
        "+ ",
        "    filter(!is.na(relative_abundance)) %>%  # Only species in dominant_species list",
        "+ ",
        "    select(Species, PC1_loading, PC2_loading, relative_abundance) %>%",
        "+ ",
        "    arrange(desc(abs(PC1_loading) + abs(PC2_loading))) %>%",
        "+ ",
        "    slice_head(n = 10)",
        "+ ",
        "  print(knitr::kable(dominant_results, digits = 3))",
        "+ ",
        "  ",
        "+ ",
        "  # Print all species contributions",
        "+ ",
        "  cat(\"\\nTop Contributing Species (including rare species):\\n\")",
        "+ ",
        "  all_results <- year_results %>%",
        "+ ",
        "    select(Species, PC1_loading, PC2_loading) %>%",
        "+ ",
        "    arrange(desc(abs(PC1_loading) + abs(PC2_loading))) %>%",
        "+ ",
        "    slice_head(n = 10)",
        "+ ",
        "  print(knitr::kable(all_results, digits = 3))",
        "+ ",
        "}",
        "> ",
        "> ",
        "cat(\"\\n\\n3. Station Patterns\\n\")",
        "> ",
        "cat(\"-----------------\\n\")",
        "> ",
        "for(year in years) {",
        "+ ",
        "  cat(sprintf(\"\\nYear %d:\\n\", year))",
        "+ ",
        "  print(knitr::kable(pca_results[[as.character(year)]]$stations, digits = 3))",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Add summary of overall dominant species",
        "> ",
        "cat(\"\\n\\n4. Overall Community Dominance Patterns\\n\")",
        "> ",
        "cat(\"-----------------------------------\\n\")",
        "> ",
        "print(knitr::kable(",
        "+ ",
        "  dominant_species %>%",
        "+ ",
        "    arrange(desc(relative_abundance)) %>%",
        "+ ",
        "    mutate(",
        "+ ",
        "      relative_abundance = relative_abundance * 100,",
        "+ ",
        "      cumulative_abundance = cumsum(relative_abundance)",
        "+ ",
        "    ),",
        "+ ",
        "  col.names = c(\"Species\", \"Total Abundance\", \"Relative Abundance (%)\", \"Cumulative Abundance (%)\"),",
        "+ ",
        "  digits = 2",
        "+ ",
        "))",
        "> ",
        "> ",
        "sink()",
        "> ",
        "# Modified extract_pca_results function to calculate dominant species for each year",
        "> ",
        "extract_pca_results <- function(year, species_pca) {",
        "+ ",
        "  # Calculate dominant species for this specific year",
        "+ ",
        "  year_dominant_species <- henda %>%",
        "+ ",
        "    filter(Year == year) %>%",
        "+ ",
        "    pivot_longer(cols = c(A7, B5, B8, C4, E3, E4), ",
        "+ ",
        "                names_to = \"Station\", ",
        "+ ",
        "                values_to = \"abundance\") %>%",
        "+ ",
        "    group_by(Flokkun) %>%",
        "+ ",
        "    summarise(total_abundance = sum(abundance)) %>%",
        "+ ",
        "    ungroup() %>%",
        "+ ",
        "    mutate(relative_abundance = total_abundance/sum(total_abundance)) %>%",
        "+ ",
        "    filter(relative_abundance > 0.01) %>%  # Keep species with >1% relative abundance",
        "+ ",
        "    rename(Species = Flokkun) %>%",
        "+ ",
        "    arrange(desc(relative_abundance))",
        "+ ",
        "  ",
        "+ ",
        "  # Get variance explained",
        "+ ",
        "  var_explained <- round(summary(species_pca)$cont$importance[2,] * 100, 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Get species scores and sort by absolute contribution to PC1 and PC2",
        "+ ",
        "  species_scores <- scores(species_pca, display = \"sites\")",
        "+ ",
        "  top_contributors <- data.frame(",
        "+ ",
        "    Species = rownames(species_scores),",
        "+ ",
        "    PC1_loading = species_scores[,1],",
        "+ ",
        "    PC2_loading = species_scores[,2]",
        "+ ",
        "  ) %>%",
        "+ ",
        "    mutate(",
        "+ ",
        "      PC1_abs = abs(PC1_loading),",
        "+ ",
        "      PC2_abs = abs(PC2_loading)",
        "+ ",
        "    ) %>%",
        "+ ",
        "    # Join with year-specific dominant species information",
        "+ ",
        "    left_join(",
        "+ ",
        "      year_dominant_species %>% ",
        "+ ",
        "        select(Species, relative_abundance),",
        "+ ",
        "      by = \"Species\"",
        "+ ",
        "    )",
        "+ ",
        "  ",
        "+ ",
        "  station_scores <- data.frame(",
        "+ ",
        "    scores(species_pca, display = \"species\"),",
        "+ ",
        "    Station = colnames(year_data)",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  return(list(",
        "+ ",
        "    year = year,",
        "+ ",
        "    variance = var_explained,",
        "+ ",
        "    top_species = top_contributors,",
        "+ ",
        "    dominant_species = year_dominant_species,  # Include the year's dominant species list",
        "+ ",
        "    stations = station_scores",
        "+ ",
        "  ))",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Store results for all years",
        "> ",
        "pca_results <- list()",
        "> ",
        "for(year in years) {",
        "+ ",
        "  # Run PCA again to get results",
        "+ ",
        "  year_data <- henda %>%",
        "+ ",
        "    filter(Year == year) %>%",
        "+ ",
        "    select(-Year) %>%",
        "+ ",
        "    as.data.frame()",
        "+ ",
        "  ",
        "+ ",
        "  rownames(year_data) <- year_data$Flokkun",
        "+ ",
        "  year_data <- year_data %>% select(-Flokkun)",
        "+ ",
        "  ",
        "+ ",
        "  species_pca <- rda(scale(year_data))",
        "+ ",
        "  pca_results[[as.character(year)]] <- extract_pca_results(year, species_pca)",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Create summary tables for the manuscript",
        "> ",
        "# 1. Variance explained table",
        "> ",
        "variance_table <- data.frame(",
        "+ ",
        "  Year = years,",
        "+ ",
        "  PC1 = sapply(pca_results, function(x) x$variance[1]),",
        "+ ",
        "  PC2 = sapply(pca_results, function(x) x$variance[2]),",
        "+ ",
        "  Total = sapply(pca_results, function(x) sum(x$variance[1:2]))",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Print variance table in publication format",
        "> ",
        "cat(\"\\nTable 1. Percentage of variance explained by the first two principal components\\n\")",
        "\nTable 1. Percentage of variance explained by the first two principal components\n",
        "> ",
        "print(knitr::kable(variance_table, ",
        "+ ",
        "                   digits = 1,",
        "+ ",
        "                   caption = \"Percentage of variance explained by PCA axes\"))",
        "\n\nTable: Percentage of variance explained by PCA axes\n\n|         | Year|  PC1|  PC2| Total|\n|:--------|----:|----:|----:|-----:|\n|1999.PC1 | 1999| 38.9| 30.3|  69.2|\n|2013.PC1 | 2013| 98.9|  1.0|  99.9|\n|2014.PC1 | 2014| 56.7| 23.2|  79.9|\n|2015.PC1 | 2015| 75.4| 12.0|  87.4|\n|2016.PC1 | 2016| 66.3| 16.8|  83.1|\n|2017.PC1 | 2017| 52.0| 21.8|  73.8|\n",
        "> ",
        "> ",
        "# 2. Top contributing species for each year",
        "> ",
        "cat(\"\\nTable 2. Top contributing species to community composition by year\\n\")",
        "\nTable 2. Top contributing species to community composition by year\n",
        "> ",
        "for(year in years) {",
        "+ ",
        "  cat(sprintf(\"\\nYear %d:\\n\", year))",
        "+ ",
        "  print(knitr::kable(pca_results[[as.character(year)]]$top_species[1:5,],",
        "+ ",
        "                     digits = 3,",
        "+ ",
        "                     caption = sprintf(\"Top 5 contributing species in %d\", year)))",
        "+ ",
        "}",
        "\nYear 1999:\n\n\nTable: Top 5 contributing species in 1999\n\n|Species                  | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundance|\n|:------------------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Tubificoides benedii     |      -1.038|       2.154|   1.038|   2.154|              0.135|\n|Ampharetidae             |       0.038|      -0.097|   0.038|   0.097|              0.015|\n|Apistobranchus tullbergi |      -0.212|      -0.135|   0.212|   0.135|                ",
        " NA|\n|Aricidea suecica         |      -0.317|      -0.171|   0.317|   0.171|                 NA|\n|Chaetozone setosa        |       1.135|       0.582|   1.135|   0.582|              0.041|\n\nYear 2013:\n\n\nTable: Top 5 contributing species in 2013\n\n|Species               | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundance|\n|:---------------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Tubificoides benedii  |      -0.176|      -0.179|   0.176|   0.179|                 NA|",
        "\n|Tubificoides kozloffi |      -0.168|      -0.191|   0.168|   0.191|                 NA|\n|Aricidea suecica      |      -0.169|      -0.064|   0.169|   0.064|                 NA|\n|Capitella capitata    |       3.225|      -0.169|   3.225|   0.169|              0.905|\n|Chaetozone setosa     |      -0.135|       0.142|   0.135|   0.142|              0.018|\n\nYear 2014:\n\n\nTable: Top 5 contributing species in 2014\n\n|Species               | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundance|\n|:-------",
        "--------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Sipuncula             |      -0.172|       0.227|   0.172|   0.227|                 NA|\n|Tubificoides benedii  |      -0.172|       0.227|   0.172|   0.227|                 NA|\n|Tubificoides kozloffi |       0.780|      -2.500|   0.780|   2.500|              0.127|\n|Ampharetidae          |      -0.175|       0.235|   0.175|   0.235|                 NA|\n|Amphitrite cirrata    |      -0.170|       0.186|   0.170|   0.186|        ",
        "         NA|\n\nYear 2015:\n\n\nTable: Top 5 contributing species in 2015\n\n|Species                  | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundance|\n|:------------------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Sipuncula                |      -0.288|       0.088|   0.288|   0.088|                 NA|\n|Tubificoides benedii     |      -0.267|       0.019|   0.267|   0.019|                 NA|\n|Tubificoides kozloffi    |      -0.247|       0.040|   0.247|   0.040|   ",
        "              NA|\n|Amphitrite cirrata       |      -0.301|       0.098|   0.301|   0.098|                 NA|\n|Apistobranchus tullbergi |      -0.267|       0.066|   0.267|   0.066|                 NA|\n\nYear 2016:\n\n\nTable: Top 5 contributing species in 2016\n\n|Species               | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundance|\n|:---------------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Sipuncula             |      -0.255|       0.016|   0.255|   0.016|       ",
        "          NA|\n|Tubificoides kozloffi |       0.207|       0.540|   0.207|   0.540|              0.043|\n|Ampharetidae          |      -0.244|      -0.029|   0.244|   0.029|                 NA|\n|Amphitrite cirrata    |      -0.230|      -0.023|   0.230|   0.023|                 NA|\n|Aricidea suecica      |      -0.050|      -0.039|   0.050|   0.039|              0.013|\n\nYear 2017:\n\n\nTable: Top 5 contributing species in 2017\n\n|Species               | PC1_loading| PC2_loading| PC1_abs| PC2_abs| relative_abundan",
        "ce|\n|:---------------------|-----------:|-----------:|-------:|-------:|------------------:|\n|Sipuncula             |      -0.217|      -0.112|   0.217|   0.112|                 NA|\n|Tubificoides benedii  |      -0.158|      -0.124|   0.158|   0.124|                 NA|\n|Tubificoides kozloffi |      -0.228|      -0.112|   0.228|   0.112|                 NA|\n|Ampharetidae          |      -0.215|      -0.039|   0.215|   0.039|                 NA|\n|Amphitrite cirrata    |      -0.261|      -0.089|   0.261|   0",
        ".089|                 NA|\n",
        "> ",
        "> ",
        "# 3. Station patterns summary",
        "> ",
        "cat(\"\\nStation patterns across years:\\n\")",
        "\nStation patterns across years:\n",
        "> ",
        "for(year in years) {",
        "+ ",
        "  cat(sprintf(\"\\nYear %d:\\n\", year))",
        "+ ",
        "  stations <- pca_results[[as.character(year)]]$stations",
        "+ ",
        "  print(knitr::kable(stations, ",
        "+ ",
        "                     digits = 3,",
        "+ ",
        "                     caption = sprintf(\"Station coordinates in %d\", year)))",
        "+ ",
        "}",
        "\nYear 1999:\n\n\nTable: Station coordinates in 1999\n\n|   |    PC1|   PC2|Station |\n|:--|------:|-----:|:-------|\n|A7 |  1.403| 0.495|A7      |\n|B5 |  1.252| 0.443|B5      |\n|B8 |  1.384| 0.457|B8      |\n|C4 |  0.845| 0.324|C4      |\n|E3 | -0.706| 1.545|E3      |\n|E4 | -0.684| 1.555|E4      |\n\nYear 2013:\n\n\nTable: Station coordinates in 2013\n\n|   |   PC1|    PC2|Station |\n|:--|-----:|------:|:-------|\n|A7 | 1.349| -0.071|A7      |\n|B5 | 1.349| -0.069|B5      |\n|B8 | 1.349| -0.067|B8      |\n|C4 | 1.316|  0.307|C4",
        "      |\n|E3 | 1.350| -0.023|E3      |\n|E4 | 1.349| -0.070|E4      |\n\nYear 2014:\n\n\nTable: Station coordinates in 2014\n\n|   |   PC1|    PC2|Station |\n|:--|-----:|------:|:-------|\n|A7 | 1.616|  0.492|A7      |\n|B5 | 1.602|  0.237|B5      |\n|B8 | 1.591|  0.528|B8      |\n|C4 | 0.633| -0.877|C4      |\n|E3 | 0.362| -1.484|E3      |\n|E4 | 1.299| -0.710|E4      |\n\nYear 2015:\n\n\nTable: Station coordinates in 2015\n\n|   |   PC1|    PC2|Station |\n|:--|-----:|------:|:-------|\n|A7 | 1.457|  0.766|A7      |\n|B5 | 1.574| -",
        "0.187|B5      |\n|B8 | 1.536|  0.540|B8      |\n|C4 | 1.418| -0.578|C4      |\n|E3 | 1.343| -0.862|E3      |\n|E4 | 1.419|  0.230|E4      |\n\nYear 2016:\n\n\nTable: Station coordinates in 2016\n\n|   |   PC1|    PC2|Station |\n|:--|-----:|------:|:-------|\n|A7 | 1.469| -0.593|A7      |\n|B5 | 1.516| -0.559|B5      |\n|B8 | 1.346| -0.326|B8      |\n|C4 | 1.507| -0.414|C4      |\n|E3 | 1.362|  1.006|E3      |\n|E4 | 1.327|  1.064|E4      |\n\nYear 2017:\n\n\nTable: Station coordinates in 2017\n\n|   |   PC1|    PC2|Station |\n|:--|-",
        "----:|------:|:-------|\n|A7 | 1.430| -0.643|A7      |\n|B5 | 1.469| -0.094|B5      |\n|B8 | 1.550| -0.624|B8      |\n|C4 | 1.343| -0.145|C4      |\n|E3 | 1.335|  0.992|E3      |\n|E4 | 0.556|  1.609|E4      |\n",
        "> ",
        "> ",
        "# Save results to file for manuscript",
        "> ",
        "sink(\"output/pca_results_summary.txt\")",
        "> ",
        "cat(\"PCA Results Summary for Marine Biology Manuscript\\n\")",
        "> ",
        "cat(\"================================================\\n\\n\")",
        "> ",
        "> ",
        "cat(\"1. Variance Explained\\n\")",
        "> ",
        "cat(\"-------------------\\n\")",
        "> ",
        "print(knitr::kable(variance_table, digits = 1))",
        "> ",
        "> ",
        "cat(\"\\n\\n2. Species Contributions by Year\\n\")",
        "> ",
        "cat(\"------------------------------\\n\")",
        "> ",
        "for(year in years) {",
        "+ ",
        "  cat(sprintf(\"\\nYear %d:\\n\", year))",
        "+ ",
        "  ",
        "+ ",
        "  # Print year-specific dominant species first",
        "+ ",
        "  cat(\"\\nDominant Species for this year (>1% relative abundance):\\n\")",
        "+ ",
        "  print(knitr::kable(",
        "+ ",
        "    pca_results[[as.character(year)]]$dominant_species %>%",
        "+ ",
        "      mutate(relative_abundance = relative_abundance * 100),",
        "+ ",
        "    col.names = c(\"Species\", \"Total Abundance\", \"Relative Abundance (%)\"),",
        "+ ",
        "    digits = 2",
        "+ ",
        "  ))",
        "+ ",
        "  ",
        "+ ",
        "  # Print PCA results for dominant species",
        "+ ",
        "  cat(\"\\nPCA loadings for dominant species:\\n\")",
        "+ ",
        "  dominant_results <- pca_results[[as.character(year)]]$top_species %>%",
        "+ ",
        "    filter(!is.na(relative_abundance)) %>%",
        "+ ",
        "    arrange(desc(PC1_abs + PC2_abs)) %>%",
        "+ ",
        "    select(Species, PC1_loading, PC2_loading, relative_abundance) %>%",
        "+ ",
        "    mutate(relative_abundance = relative_abundance * 100)",
        "+ ",
        "  print(knitr::kable(dominant_results, digits = 3))",
        "+ ",
        "  ",
        "+ ",
        "  # Print all species contributions",
        "+ ",
        "  cat(\"\\nTop Contributing Species (including rare species):\\n\")",
        "+ ",
        "  all_results <- pca_results[[as.character(year)]]$top_species %>%",
        "+ ",
        "    arrange(desc(PC1_abs + PC2_abs)) %>%",
        "+ ",
        "    select(Species, PC1_loading, PC2_loading) %>%",
        "+ ",
        "    slice_head(n = 10)",
        "+ ",
        "  print(knitr::kable(all_results, digits = 3))",
        "+ ",
        "}",
        "> ",
        "> ",
        "cat(\"\\n\\n3. Station Patterns\\n\")",
        "> ",
        "cat(\"-----------------\\n\")",
        "> ",
        "for(year in years) {",
        "+ ",
        "  cat(sprintf(\"\\nYear %d:\\n\", year))",
        "+ ",
        "  print(knitr::kable(pca_results[[as.character(year)]]$stations, digits = 3))",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Add summary of overall dominant species",
        "> ",
        "cat(\"\\n\\n4. Overall Community Dominance Patterns\\n\")",
        "> ",
        "cat(\"-----------------------------------\\n\")",
        "> ",
        "print(knitr::kable(",
        "+ ",
        "  dominant_species %>%",
        "+ ",
        "    arrange(desc(relative_abundance)) %>%",
        "+ ",
        "    mutate(",
        "+ ",
        "      relative_abundance = relative_abundance * 100,",
        "+ ",
        "      cumulative_abundance = cumsum(relative_abundance)",
        "+ ",
        "    ),",
        "+ ",
        "  col.names = c(\"Species\", \"Total Abundance\", \"Relative Abundance (%)\", \"Cumulative Abundance (%)\"),",
        "+ ",
        "  digits = 2",
        "+ ",
        "))",
        "> ",
        "> ",
        "sink()",
        "> ",
        "library(ggrepel)",
        "> ",
        "library(vegan)",
        "> ",
        "library(readxl)",
        "> ",
        "library(patchwork)",
        "> ",
        "> ",
        "# Find dominant species (>1% relative abundance)",
        "> ",
        "dominant_species <- henda %>%",
        "+ ",
        "  pivot_longer(cols = c(A7, B5, B8, C4, E3, E4), ",
        "+ ",
        "              names_to = \"Station\", ",
        "+ ",
        "              values_to = \"abundance\") %>%",
        "+ ",
        "  group_by(Flokkun) %>%",
        "+ ",
        "  summarise(total_abundance = sum(abundance)) %>%",
        "+ ",
        "  ungroup() %>%",
        "+ ",
        "  mutate(relative_abundance = total_abundance/sum(total_abundance)) %>%",
        "+ ",
        "  filter(relative_abundance > 0.01) %>%  # Keep species with >1% relative abundance",
        "+ ",
        "  rename(Species = Flokkun) %>%",
        "+ ",
        "  arrange(desc(relative_abundance))",
        "> ",
        "> ",
        "# Print to verify",
        "> ",
        "print(\"Dominant species identified:\")",
        "[1] \"Dominant species identified:\"\n",
        "> ",
        "print(dominant_species)",
        "\u001B[38;5;246m# A tibble: 19 × 3\u001B[39m\n   Species                  total_abundance relative_abundance\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                              \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Capitella capitata                 \u001B[4m7\u001B[24m\u001B[4m9\u001B[24m361             0.265 \n\u001B[38;5;250m 2\u001B[39m Polydora sp.                       \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m632             0.102 \n\u001B[38;5;250m 3\u001B[39m Spio sp.                           \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m927    ",
        "         0.069\u001B[4m8\u001B[24m\n\u001B[38;5;250m 4\u001B[39m Ophelina acuminata                 \u001B[4m1\u001B[24m\u001B[4m8\u001B[24m966             0.063\u001B[4m2\u001B[24m\n\u001B[38;5;250m 5\u001B[39m Macoma calcarea                    \u001B[4m1\u001B[24m\u001B[4m5\u001B[24m977             0.053\u001B[4m3\u001B[24m\n\u001B[38;5;250m 6\u001B[39m Chaetozone setosa                  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m314             0.034\u001B[4m4\u001B[24m\n\u001B[38;5;250m 7\u001B[39m Tubificoides benedii                \u001B[4m9\u001B[24m631             0.032\u001B[4m1\u001B[24m\n\u001B[38;5;250m 8\u001B[39m Scalibregma inflatum                \u001B[4m9\u001B[24m570    ",
        "         0.031\u001B[4m9\u001B[24m\n\u001B[38;5;250m 9\u001B[39m Scoloplos armiger                   \u001B[4m9\u001B[24m084             0.030\u001B[4m3\u001B[24m\n\u001B[38;5;250m10\u001B[39m Tubificoides kozloffi               \u001B[4m7\u001B[24m254             0.024\u001B[4m2\u001B[24m\n\u001B[38;5;250m11\u001B[39m Eteone longa                        \u001B[4m6\u001B[24m414             0.021\u001B[4m4\u001B[24m\n\u001B[38;5;250m12\u001B[39m Mediomastus fragilis                \u001B[4m6\u001B[24m315             0.021\u001B[4m1\u001B[24m\n\u001B[38;5;250m13\u001B[39m Balanus sp.                         \u001B[4m5\u001B[24m407             0.018\u001B[4m0\u001B[24m\n\u001B[",
        "38;5;250m14\u001B[39m Microphthalmus aberrans             \u001B[4m4\u001B[24m679             0.015\u001B[4m6\u001B[24m\n\u001B[38;5;250m15\u001B[39m Praxillella praetermissa            \u001B[4m4\u001B[24m425             0.014\u001B[4m8\u001B[24m\n\u001B[38;5;250m16\u001B[39m Ennucula tenuis                     \u001B[4m4\u001B[24m277             0.014\u001B[4m3\u001B[24m\n\u001B[38;5;250m17\u001B[39m Mytilus edulis                      \u001B[4m3\u001B[24m871             0.012\u001B[4m9\u001B[24m\n\u001B[38;5;250m18\u001B[39m Heteromastus filiformis             \u001B[4m3\u001B[24m698             0.012\u001B[4m3\u001B[24m\n\u001B[38;5;250m19\u001B[39m Protomedei",
        "a fasciata                \u001B[4m3\u001B[24m140             0.010\u001B[4m5\u001B[24m\n",
        "> ",
        "> ",
        "# Function to process and create PCA for one year",
        "> ",
        "create_year_pca <- function(year, data = henda) {",
        "+ ",
        "  # Calculate dominant species for this specific year",
        "+ ",
        "  year_dominant_species <- data %>%",
        "+ ",
        "    filter(Year == year) %>%",
        "+ ",
        "    pivot_longer(cols = c(A7, B5, B8, C4, E3, E4), ",
        "+ ",
        "                names_to = \"Station\", ",
        "+ ",
        "                values_to = \"abundance\") %>%",
        "+ ",
        "    group_by(Flokkun) %>%",
        "+ ",
        "    summarise(total_abundance = sum(abundance)) %>%",
        "+ ",
        "    ungroup() %>%",
        "+ ",
        "    mutate(relative_abundance = total_abundance/sum(total_abundance)) %>%",
        "+ ",
        "    filter(relative_abundance > 0.01) %>%  # Keep species with >1% relative abundance",
        "+ ",
        "    rename(Species = Flokkun)",
        "+ ",
        "  ",
        "+ ",
        "  # Filter data for specific year and prepare",
        "+ ",
        "  year_data <- data %>%",
        "+ ",
        "    filter(Year == year) %>%",
        "+ ",
        "    select(-Year) %>%",
        "+ ",
        "    as.data.frame()",
        "+ ",
        "  ",
        "+ ",
        "  # Prepare data for PCA",
        "+ ",
        "  rownames(year_data) <- year_data$Flokkun",
        "+ ",
        "  year_data <- year_data %>% select(-Flokkun)",
        "+ ",
        "  ",
        "+ ",
        "  # Handle NAs",
        "+ ",
        "  year_data[is.na(year_data)] <- 0",
        "+ ",
        "  ",
        "+ ",
        "  # Run PCA",
        "+ ",
        "  species_pca <- rda(scale(year_data))",
        "+ ",
        "  ",
        "+ ",
        "  # Extract scores",
        "+ ",
        "  site_scores <- data.frame(",
        "+ ",
        "    scores(species_pca, display = \"sites\"),",
        "+ ",
        "    Species = rownames(scores(species_pca, display = \"sites\"))",
        "+ ",
        "  ) %>%",
        "+ ",
        "    # Add indicator for dominant species",
        "+ ",
        "    mutate(is_dominant = Species %in% year_dominant_species$Species)",
        "+ ",
        "  ",
        "+ ",
        "  species_loadings <- data.frame(",
        "+ ",
        "    scores(species_pca, display = \"species\"),",
        "+ ",
        "    Station = colnames(year_data)",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Calculate variance explained",
        "+ ",
        "  var_explained <- round(summary(species_pca)$cont$importance[2,1:2] * 100, 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Create PCA plot",
        "+ ",
        "  pca_plot <- ggplot() +",
        "+ ",
        "    # Add points for all species",
        "+ ",
        "    geom_point(data = site_scores,",
        "+ ",
        "               aes(x = PC1, y = PC2),",
        "+ ",
        "               size = 2,",
        "+ ",
        "               shape = 19,",
        "+ ",
        "               color = \"black\") +",
        "+ ",
        "    # Add arrows for stations",
        "+ ",
        "    geom_segment(data = species_loadings,",
        "+ ",
        "                 aes(x = 0, y = 0, xend = PC1, yend = PC2),",
        "+ ",
        "                 arrow = arrow(length = unit(0.2, \"cm\")),",
        "+ ",
        "                 color = \"darkgrey\") +",
        "+ ",
        "    # Add station labels",
        "+ ",
        "    geom_text_repel(data = species_loadings,",
        "+ ",
        "                    aes(x = PC1, y = PC2, label = Station),",
        "+ ",
        "                    size = 3.5,",
        "+ ",
        "                    fontface = \"bold\",",
        "+ ",
        "                    box.padding = 0.5,",
        "+ ",
        "                    point.padding = 0.3) +",
        "+ ",
        "    # Add labels only for dominant species",
        "+ ",
        "    geom_text_repel(data = filter(site_scores, is_dominant),",
        "+ ",
        "                    aes(x = PC1, y = PC2, label = Species),",
        "+ ",
        "                    size = 2.8,",
        "+ ",
        "                    fontface = \"italic\",",
        "+ ",
        "                    color = \"grey30\",",
        "+ ",
        "                    box.padding = 0.5,",
        "+ ",
        "                    point.padding = 0.3) +",
        "+ ",
        "    coord_fixed() +",
        "+ ",
        "    theme_bw() +",
        "+ ",
        "    theme(",
        "+ ",
        "      panel.grid.minor = element_blank(),",
        "+ ",
        "      panel.grid.major = element_line(color = \"grey95\"),",
        "+ ",
        "      axis.text = element_text(color = \"black\", size = 8),",
        "+ ",
        "      axis.title = element_text(size = 10),",
        "+ ",
        "      plot.title = element_text(size = 11, face = \"bold\"),",
        "+ ",
        "      plot.subtitle = element_text(size = 9)",
        "+ ",
        "    ) +",
        "+ ",
        "    labs(",
        "+ ",
        "      title = paste(\"PCA of benthic community composition -\", year),",
        "+ ",
        "      subtitle = paste0(\"Species shown as points (>1% abundance labeled, n=\", ",
        "+ ",
        "                       sum(site_scores$is_dominant), \"), stations as arrows\"),",
        "+ ",
        "      x = paste0(\"PC1 (\", var_explained[1], \"%)\"),",
        "+ ",
        "      y = paste0(\"PC2 (\", var_explained[2], \"%)\")",
        "+ ",
        "    )",
        "+ ",
        "  ",
        "+ ",
        "  return(pca_plot)",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Create PCA plots for all years",
        "> ",
        "years <- c(1999, 2013:2017)",
        "> ",
        "pca_plots <- list()",
        "> ",
        "> ",
        "for(year in years) {",
        "+ ",
        "  pca_plots[[as.character(year)]] <- create_year_pca(year)",
        "+ ",
        "  ",
        "+ ",
        "  # Save individual plots",
        "+ ",
        "  ggsave(",
        "+ ",
        "    paste0(\"output/pca_biplot_\", year, \".png\"),",
        "+ ",
        "    pca_plots[[as.character(year)]], ",
        "+ ",
        "    width = 10, height = 8, ",
        "+ ",
        "    dpi = 300, ",
        "+ ",
        "    bg = \"white\"",
        "+ ",
        "  )",
        "+ ",
        "}",
        "Warning message:\nggrepel: 1 unlabeled data points (too many overlaps). Consider increasing max.overlaps \n",
        "> ",
        "> ",
        "# Combine all plots",
        "> ",
        "combined_plot <- wrap_plots(pca_plots, ncol = 2) +",
        "+ ",
        "  plot_annotation(",
        "+ ",
        "    title = \"Temporal changes in community composition (1999, 2013-2017)\",",
        "+ ",
        "    subtitle = \"Species shown as points, stations as arrows\",",
        "+ ",
        "    caption = \"Based on species abundance data\",",
        "+ ",
        "    theme = theme(",
        "+ ",
        "      plot.title = element_text(size = 14, face = \"bold\"),",
        "+ ",
        "      plot.subtitle = element_text(size = 12),",
        "+ ",
        "      plot.caption = element_text(size = 10, hjust = 0)",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "> ",
        "> ",
        "# Save combined plot",
        "> ",
        "ggsave(\"output/pca_biplots_all_years.png\", ",
        "+ ",
        "       combined_plot, ",
        "+ ",
        "       width = 20, height = 15, ",
        "+ ",
        "       dpi = 300, ",
        "+ ",
        "       bg = \"white\")",
        "Warning messages:\n1: ggrepel: 18 unlabeled data points (too many overlaps). Consider increasing max.overlaps \n2: ggrepel: 6 unlabeled data points (too many overlaps). Consider increasing max.overlaps \n3: ggrepel: 4 unlabeled data points (too many overlaps). Consider increasing max.overlaps \n",
        "> ",
        "> ",
        "# After the PCA plots creation, add this section for results reporting",
        "> ",
        "# skráin hans Jörundar",
        "> ",
        "henda <- read_csv(",
        "+ ",
        "  \"data/processed/hendaB.csv\",",
        "+ ",
        "  col_types = cols(",
        "+ ",
        "    Year = col_integer(),",
        "+ ",
        "    Flokkun = col_character(),  # Ensure Flokkun is read as character",
        "+ ",
        "    A7 = col_integer(),",
        "+ ",
        "    B5 = col_integer(),",
        "+ ",
        "    B8 = col_integer(),",
        "+ ",
        "    C4 = col_integer(),",
        "+ ",
        "    E3 = col_integer(),",
        "+ ",
        "    E4 = col_integer()",
        "+ ",
        "  ),",
        "+ ",
        "  na = c(\"\", \"NA\")",
        "+ ",
        ") %>%",
        "+ ",
        "  mutate(across(where(is.numeric), ~ replace_na(., 0)))  %>% # Replace NA with 0 for numeric columns",
        "+ ",
        "  select(Flokkun:last_col()) ",
        "\rindexing hendaB.csv [======================================================================================] 228.49MB/s, eta:  0s\r                                                                                                                                 \r",
        "> ",
        "# Transform henda from wide to long format",
        "> ",
        "henda_long <- henda %>%",
        "+ ",
        "  pivot_longer(cols = c(\"A7\",\"B5\", \"B8\",  \"C4\",  \"E3\", \"E4\") , # Select station columns",
        "+ ",
        "               names_to = \"station\",                     # New column for station names",
        "+ ",
        "               values_to = \"adjusted_density\") %>%       # New column for density values",
        "+ ",
        "  rename(species = Flokkun,                              # Rename 'Flokkun' to 'species'",
        "+ ",
        "         year = Year) %>%                                # Rename 'Year' to 'year'",
        "+ ",
        "  select(station, year, species, adjusted_density)       # Select and order columns",
        "> ",
        "# Required packages",
        "> ",
        "library(dplyr)",
        "> ",
        "library(stringr)",
        "> ",
        "# Step 1: Remove \" sp.\" from species names",
        "> ",
        "henda_long_cleaned <- henda_long %>%",
        "+ ",
        "  mutate(species = str_replace(species, \" sp\\\\.\", \"\"))",
        "> ",
        "# Step 2: Match with reference dataset and remove non-matching species",
        "> ",
        "henda_long_matched <- henda_long_cleaned %>%",
        "+ ",
        "  semi_join(df, by = \"species\")",
        "> ",
        "# Step 3: Quick validation check",
        "> ",
        "cat(\"Data Cleaning Summary:\\n\",",
        "+ ",
        "    \"Original rows:\", nrow(henda_long), \"\\n\",",
        "+ ",
        "    \"Final rows:\", nrow(henda_long_matched), \"\\n\",",
        "+ ",
        "    \"Rows removed:\", nrow(henda_long) - nrow(henda_long_matched), \"\\n\")",
        "Data Cleaning Summary:\n Original rows: 1830 \n Final rows: 1710 \n Rows removed: 120 \n",
        "> ",
        "# Step 4: View removed species for validation",
        "> ",
        "removed_species <- henda_long_cleaned %>%",
        "+ ",
        "  anti_join(df, by = \"species\") %>%",
        "+ ",
        "  group_by(species) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    observations = n(),",
        "+ ",
        "    total_abundance = sum(adjusted_density),",
        "+ ",
        "    years = paste(sort(unique(year)), collapse = \", \"),",
        "+ ",
        "    stations = paste(sort(unique(station)), collapse = \", \")",
        "+ ",
        "  ) %>%",
        "+ ",
        "  arrange(desc(observations))",
        "> ",
        "# Print removed species summary",
        "> ",
        "print(removed_species, n = Inf, width = Inf)",
        "\u001B[38;5;246m# A tibble: 12 × 5\u001B[39m\n   species                 observations total_abundance years                  stations              \n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                          \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                 \n\u001B[38;5;250m 1\u001B[39m Balanus                           24            \u001B[4m5\u001B[24m407 2014, 2015, 2016, 2017 A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 2\u001B[39m S",
        "ipuncula                         24             149 2014, 2015, 2016, 2017 A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 3\u001B[39m Platyhelminthes                   18             140 2014, 2016, 2017       A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 4\u001B[39m Anthozoa                           6               8 2014                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 5\u001B[39m Bryozoa                            6              25 2014                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 6\u001B[39m Ciliatocardium ciliatum            6     ",
        "         17 2014                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 7\u001B[39m Cystenides granulata               6              41 2017                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 8\u001B[39m Maldane sarsi                      6              44 1999                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m 9\u001B[39m Ostracoda                          6             133 2016                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m10\u001B[39m Paraonidae                         6              41 2016                   A7, B",
        "5, B8, C4, E3, E4\n\u001B[38;5;250m11\u001B[39m Philomedes globosus                6             222 1999                   A7, B5, B8, C4, E3, E4\n\u001B[38;5;250m12\u001B[39m Verruca stroemia                   6              33 2014                   A7, B5, B8, C4, E3, E4\n",
        "> ",
        "# Prepare data for NMDS - exclude 1999 data",
        "> ",
        "#species_matrix <- df %>% #Mín gögn",
        "> ",
        "species_matrix <- henda_long_matched %>% #Gögn Jörundar",
        "+ ",
        "  #filter(year >= 2013) %>%  # Only include 2013-2017 data",
        "+ ",
        "  select(station, year, species, adjusted_density) %>%",
        "+ ",
        "  pivot_wider(",
        "+ ",
        "    names_from = species,",
        "+ ",
        "    values_from = adjusted_density,",
        "+ ",
        "    values_fill = 0",
        "+ ",
        "  ) %>%",
        "+ ",
        "  # Store station and year before removing them for NMDS",
        "+ ",
        "  mutate(",
        "+ ",
        "    station_temp = station,",
        "+ ",
        "    year_temp = year",
        "+ ",
        "  ) %>%",
        "+ ",
        "  select(-station, -year)",
        "> ",
        "# Perform NMDS",
        "> ",
        "nmds <- metaMDS(select(species_matrix, -station_temp, -year_temp), distance = \"bray\")",
        "Square root transformation\nWisconsin double standardization\nRun 0 stress 0.1409518 \nRun 1 stress 0.1377668 \n... New best solution\n... Procrustes: rmse 0.08713878  max resid 0.2180013 \nRun 2 stress 0.1409513 \nRun 3 stress 0.1475872 \nRun 4 stress 0.1493218 \nRun 5 stress 0.1403359 \nRun 6 stress 0.1480278 \nRun 7 stress 0.1378498 \n... Procrustes: rmse 0.006482335  max resid 0.03324606 \nRun 8 stress 0.1391447 \nRun 9 stress 0.1445597 \nRun 10 stress 0.1409516 \nRun 11 stress 0.1377669 \n... Procrustes: rmse 8.896558e",
        "-05  max resid 0.0003096162 \n... Similar to previous best\nRun 12 stress 0.1492049 \nRun 13 stress 0.1412733 \nRun 14 stress 0.1389861 \nRun 15 stress 0.1391456 \nRun 16 stress 0.1391263 \nRun 17 stress 0.1467471 \nRun 18 stress 0.1459839 \nRun 19 stress 0.1431339 \nRun 20 stress 0.1402581 \n*** Best solution repeated 1 times\n",
        "> ",
        "# Extract site scores and add metadata",
        "> ",
        "site_scores <- as.data.frame(scores(nmds, display = \"sites\"))",
        "> ",
        "site_scores$Station <- species_matrix$station_temp",
        "> ",
        "site_scores$Year <- as.factor(species_matrix$year_temp)  # Convert Year to factor",
        "> ",
        "# Extract species scores",
        "> ",
        "species_scores <- as.data.frame(scores(nmds, display = \"species\"))",
        "> ",
        "# Calculate species contributions (using relative abundance)",
        "> ",
        "species_rel_abundance <- colSums(select(species_matrix, -station_temp, -year_temp)) / ",
        "+ ",
        "    sum(select(species_matrix, -station_temp, -year_temp))",
        "> ",
        "important_species <- names(sort(species_rel_abundance[species_rel_abundance > 0.01], decreasing = TRUE))",
        "> ",
        "# Filter species scores to only show important species",
        "> ",
        "species_scores_filtered <- species_scores[rownames(species_scores) %in% important_species, ]",
        "> ",
        "env_data <- readRDS(\"data/raw/sediment_env_data.rds\") %>%",
        "+ ",
        "  select(station, year, ",
        "+ ",
        "         organic_content, depth,",
        "+ ",
        "         grain_20um, grain_63um, grain_125um, ",
        "+ ",
        "         grain_250um, grain_1000um) %>%",
        "+ ",
        "  distinct()",
        "> ",
        " sig_env_vectors <- scores(env_fit, \"vectors\") %>%",
        "+ ",
        " as.data.frame() %>%",
        "+ ",
        " mutate(variable = rownames(.)) %>%",
        "+ ",
        " filter(env_fit$vectors$pvals < 0.05)",
        "> ",
        "# Create the plot",
        "> ",
        " nmds_plot <- ggplot() +",
        "+ ",
        "   # Add points for sites",
        "+ ",
        "   geom_point(data = site_scores, ",
        "+ ",
        "              aes(x = NMDS1, y = NMDS2, color = Station, shape = Year),",
        "+ ",
        "              size = 3) +",
        "+ ",
        "   # Add smaller ellipses around years with solid lines",
        "+ ",
        "    # stat_ellipse(data = site_scores,",
        "+ ",
        "    #              aes(x = NMDS1, y = NMDS2, group = Year),",
        "+ ",
        "    #              type = \"norm\",",
        "+ ",
        "    #              level = 0.7,",
        "+ ",
        "    #              linetype = 1,",
        "+ ",
        "    #              size = 0.5) +",
        "+ ",
        "   # Add significant environmental vectors",
        "+ ",
        "   # geom_segment(data = sig_env_vectors,",
        "+ ",
        "   #              aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),",
        "+ ",
        "   #              arrow = arrow(length = unit(0.2, \"cm\")),",
        "+ ",
        "   #              color = \"darkgrey\") +",
        "+ ",
        "   # geom_text(data = sig_env_vectors,",
        "+ ",
        "   #           aes(x = NMDS1*1.1, y = NMDS2*1.1, label = variable),",
        "+ ",
        "   #           size = 3, color = \"darkgrey\") +",
        "+ ",
        "   theme_bw() +",
        "+ ",
        "   theme(",
        "+ ",
        "     panel.background = element_rect(fill = \"white\"),",
        "+ ",
        "     axis.text = element_text(size = 12, color = \"black\"),  # Larger axis text",
        "+ ",
        "     axis.title = element_text(size = 14),                  # Larger axis titles",
        "+ ",
        "     legend.text = element_text(size = 12),                 # Larger legend text",
        "+ ",
        "     legend.title = element_text(size = 12, face = \"bold\"), # Larger legend titles",
        "+ ",
        "     plot.title = element_text(size = 16, face = \"bold\")    # Larger plot title",
        "+ ",
        "   ) +",
        "+ ",
        "   labs(title = \"NMDS of Community Composition (1999 and 2013-2017)\",",
        "+ ",
        "        caption = \"\") +",
        "+ ",
        "   guides(color = guide_legend(\"Station\"),",
        "+ ",
        "          shape = guide_legend(\"Year\"))",
        "> ",
        " # Save with higher resolution and size",
        "> ",
        " ggsave(\"output/nmds_plot_1999_an-hringja.png\", ",
        "+ ",
        "        nmds_plot, ",
        "+ ",
        "        width = 12,      # Increased width",
        "+ ",
        "        height = 10,     # Increased height",
        "+ ",
        "        dpi = 300,       # Higher resolution",
        "+ ",
        "        bg = \"white\")"
    ]
}